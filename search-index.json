[{"url":"\/concepts.html","title":"Concepts","content":"Concepts\n\nNetworq uses a few concepts you need to understand in order to build your own graphs. Below you'll find definitions for Networq's terms:\n\nNode\n\nAll data in Networq is a \"Node\". A node has a name (i.e. mario). Every node is part of a package (i.e. acme:example). The node name and the package name combined give a Fully Qualified Node Name (FQNN) (i.e. acme:example:mario).\n\nOther than the name\/fqnn, a node doesn't have any properties of it's own. A Node can be tagged with one or more Types, which give the node it's available properties. For example, tagging the acme:example:mario node with the acme:example:character type allows you to specify the debut field for Mario, linking it to the game that Mario debuted in.\n\nTypes\n\nA \"Type\" defines what properties a Node can have. A type has a name (i.e. vegetable) and is part of a package (i.e. acme:food). Combining the Type name and Package Name gives you a Fully Qualified Type Name (FQTN) (i.e. acme:food:vegetable).\n\nTypes are defined by creating .yaml files in the types\/ directory of a package. They are automatically loaded when the package is loaded.\n\nTypes optionally define a list of Fields for the type. Only nodes tagged with this type will have the listed fields.\n\nA Field can be either a string (simple text), or a FQTN. When you specify a FQTN for a Field, you can only assign nodes that are tagged with this type.\n\nA Field can be a single value (default), or a list of values (by appending [] to the end of the Field type definition).\n\nTags\n\nA \"Tag\" is simply the link between a Node and a Type. One Node can contain multiple Tags.\n\nPackage\n\nA \"Package\" is a reusable set of Types and Nodes. Packages can be shared and live in their own Git Repository.\n\nA Package defines Types (in the package's types\/ directory) using YAML files.\n\nA Package can optionally define a set of Nodes. Nodes in packages are therefor also reusable and lets you share reference data or standardized lists (like countries, operating systems, etc).\n\nA Package can optionally define Widgets, which are simple HTML templates (in the templates\/ directory) which get injected into the User Interface when a user is viewing a Node of a given Type.\n\nA Package always has a package.yaml file in the root of it's repository. The package.yaml file defines the Package's name, description, license etc. And lists an optional set of dependencies: other packages that this package depends on.\n\nGraph\n\nWhen using Networq, you'll almost always interact with a \"Graph\". A Graph is a container for one or more Packages and their contents (Nodes, Types, Widgets).\n\nA Graph always has exactly 1 \"Root Package\" which is the main package of your project. Additionally the graph recursively loads and holds all packages that a parent package has a dependency on.","description":""},{"url":"\/demo.html","title":"Demo","content":"Demo\n\nThere is a demo-installation Networq available at demo.networq.io\n\nThis demo has the github.com\/networq\/acme graph loaded.\n\nThis graph represents the fictional company [\"Acme Corporation\"](https:\/\/en.wikipedia.org\/wiki\/Acme_Corporation).","description":""},{"url":"\/getting-started.html","title":"Getting started","content":"Getting started\n\nPrerequisites\n\nThis guide has the following pre-requisites:\n\n- You are familiar with using [Git](https:\/\/git-scm.com\/)\n- You are familiar with [YAML](https:\/\/wikipedia.org\/wiki\/YAML)\n- You are able to run [PHP](https:\/\/php.net) applications on your machine.\n\nIf one or more of these items are not fullfilled, then don't worry: Check the [demo](demo.html) installation instead!\n\nInstallating Networq Web\n\n\"Networq Web\" is our web-based viewer application. You can configure it to load a Graph of your choice and browse it.","description":""},{"url":"\/","title":"Networq","content":"Networq\n\nWhat is \"Networq\"?\n\nIn technical terms: Networq is a multi-dimensional graph building platform.\n\nThink of it as a cocktail of Mindmaps, Business Methodologies, ERP.\n\nYou can use these graphs to organize your business, team, project, infrastructure, life and much more...\n\nWhat can I use Networq for?\n\nQuite a lot actually! We've collected a set of use-cases to inspire you [here](use-cases\/).\n\nHow does it work?\n\nUsing Networq you build Graphs. Graphs contain Nodes. Nodes get tagged with one or more Types.\n\nTypes give Nodes their Properties.\n\nTypes and Nodes can be bundled up into a Package to share it with others.\n\nYou can import Packages from others to re-use their work in your own Graphs.\n\nFor a more thorough explanation of these concepts, click [here](concepts.html)\n\nWhat packages are available?\n\nAnybody can publish packages for Networq that you can import and re-use.\n\nThe Networq project has published a range of packages you can use on github.com\/networq.\n\nSome examples:\n\n- [Organization package](https:\/\/github.com\/networq\/organization-package)\n- [Requirement package](https:\/\/github.com\/networq\/requirement-package)\n- [Holacracy package](https:\/\/github.com\/networq\/holacracy-package)\n- ...etc\n\nCan I see an online demo?\n\nYes, check out our [demo page](demo.html).\n\nCan I run Networq myself and start using it?\n\nYes, just follow our [getting started guide](getting-started.html).","description":""},{"url":"\/types.html","title":"\/types.html","content":"Types\n\n\/\/TODO","description":""},{"url":"\/use-cases\/business-architecture.html","title":"Use-case: Enterprise \/ Business Architecture","content":"Use-case: Enterprise \/ Business Architecture\n\nUse Networq to define a Graph of your business containing all your team-members, suppliers, projects, products, processes.\n\nOnce you've defined your entire business as a Networq Graph, you'll have a single \"Source of Truth\" that serves as input for many different business scenarios:\n\n- Automatically generated Employee Manuals guaranteed to be current\n- Generated organizational charts\n- Compliancy control and auditing reports\n- Permission rules (authorization matrixes) for external services\n- HR applicant tracking\n- Performance evaluations\n- Business Process definitions with generated documentation","description":""},{"url":"\/use-cases\/competency-dictionaries.html","title":"Use-case: Competency dictionaries","content":"Use-case: Competency dictionaries\n\nDefine your own dictionaries listing competencies and their associated levels. Package them up in reusable lists and easily attach them to job postings, projects or even individual actions.\n\nTag your team members with a competency profile to keep track of their current levels, target levels and notes of their evaluations.\n\nCompetency dictionaries can be packaged up for re-use between companies. Company A can publish a beautiful \"Communication specialist\" competency dictionary, while Company B publishes a \"Customer service\" competency dictionary. Any company can now import (define a dependency on) these competency dictionary packages and start using them in their business.\n\nShareable competency dictionaries have a number of benefits:\n\n- No need to re-invent the wheel. Just use existing dictionaries where available, and only define your organization-specific competencies yourself.\n- Use the best dictionaries designed by domain expers from other organizations.\n- Mix and match to cherry pick specific competency definitions.\n- Dictionaries can be automatically updated so you'll get maintenance updates and enhancements for free.\n- Collaborate with other domain experts on competency dictionaries on GitHub\/GitLab\/etc.\n\nBuild supportive dictionaries by attaching learning resources for each competency level to support team-members in leveling up.","description":""},{"url":"\/use-cases\/holacracy.html","title":"Use-case: Holacracy","content":"Use-case: Holacracy\n\nTag your organizations and organizational units as Holacracy Circles and tag your team members as Holacracy Partners and start governing your business with Roles, Governance Meetings, Tactical meetings, Strategies, Domains and more.\n\nAs you'll be able to re-use your existing employee\/freelancer\/supplier data you'll be working from a single source and don't need to add them to Holacracy specific environments and tools.\n\nViewing a partner page will list all of his\/her holacracy details (circles, roles, etc) right next to other relevant types like HR information, Competencies, payment details, contact details and everything else related to this one person.","description":""},{"url":"\/use-cases\/","title":"Use-cases:","content":"Use-cases:\n\nNetworq can be used for a wide range of use-cases. By creating new types you can unlock even more use-cases.\n\nBelow you'll find a list of ideas to inspire you to think in Networqs:\n\n- [Business \/ Enterprise Architecture](business-architecture.html)\n- [Project planning](project-planning.html)\n- [Holacracy](holacracy.html)\n- [Infrastructure inventory](infrastructure-inventory.html)\n- [Competency dictionaries](competency-dictionaries.html)\n- Requirement engineering\n- Devops\n- Release engineering, Deployments, Repositories\n- GTD: Getting Things Done (inbox, lists, assignees, calendar)\n- Topic-based writing \/ wiki \/ knowledge base\n- Event organization\n- Track and share your personal memories\n- Monitoring, Backups, Firewalling\n- Business Processes\n- Runbooks\n- Docker: Registries, Compose files, \"Apps\"\n- GitHub\n- DNS\n- Business Model Canvas\n- Content Management System (CMS)\n- Personal Development\n- Followup \/ Watchlist\n- Databases, clusters\n- SWOT\n- Mission\/Vision\n- Contract management\n\nBest of all: blend these use-cases for maximum impact\n\nThe real power of Networq stats showing once you blend multiple use-cases into one massive graph.","description":""},{"url":"\/use-cases\/infrastructure-inventory.html","title":"Use-case: Infrastructure inventory","content":"Use-case: Infrastructure inventory\n\nUsing Networq you can create a Graph that contains every detail about your infrastructure. You can define Hosts (with their ip-adresses, operating system details, tags) and HostGroups which can serve as Inventory input to common configuratino management tools like Ansible, Puppet, Chef, etc.\n\nHolding the inventory in Networq instead of tool-specific formats allow you to re-use and single-source your infrastructure data for many other use-cases. You could attach VPS pricing information for budgeting, tags for compliance, monitoring rules as input for sensu\/nagios\/etc, etc etc.\n\nCombining these configurations into one makes sure that all your tools and services are guaranteed to be in sync.","description":""},{"url":"\/use-cases\/project-planning.html","title":"Use-case: Project planning","content":"Use-case: Project planning\n\nDefine your projects with it's actions and generate accurate status reports, worklists etc.\n\nStart attaching reusable requirements at either project or action level for detailed requirement documentation generation\n\nTag your projects with methodology specific types to enable Kanban, Scrum, Waterfall, etc.\n\nTag outsourced actions with budget types to keep track of your expenses.\n\nTag your projects with Wikis, Resource lists, Contacts and other types to truly work from a single source from different perspectives (planning, financial, hr, technical, etc).","description":""}]